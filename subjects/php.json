{"subject_name":"php","chapters":[{"chapter_name":"Php All Syntax","topics":[{"topic_name":"test.php","topic_html":"<div class=\"col-12 col-md-11 col-lg-9 my-2 mx-auto px-2 pb-5 border content-section rounded-2\" data-el=\"section\"><pre class=\"fx-1-2 copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-solid fa-clipboard copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-variable\">$var</span> = <span class=\"hljs-string\">''</span>;\n<span class=\"hljs-variable\">$var_is_true</span> = (<span class=\"hljs-variable\">$var</span> == <span class=\"hljs-literal\">true</span>); <span class=\"hljs-comment\">// false</span>\n<span class=\"hljs-variable\">$var_is_false</span> = (<span class=\"hljs-variable\">$var</span> == <span class=\"hljs-literal\">false</span>); <span class=\"hljs-comment\">// true</span>\n\n<span class=\"hljs-variable\">$var</span> = <span class=\"hljs-string\">'   '</span>;<span class=\"hljs-comment\">//white space count as a true value use trim to remove whitespace from string</span>\n<span class=\"hljs-variable\">$var_is_true</span> = (<span class=\"hljs-variable\">$var</span> == <span class=\"hljs-literal\">true</span>); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable\">$var_is_false</span> = (<span class=\"hljs-variable\">$var</span> == <span class=\"hljs-literal\">false</span>); <span class=\"hljs-comment\">// false</span>\n\n      </code></pre><div class=\"copy-container fnx-8 my-2 p-2 bg-codelink border rounded-1 d-flex jc-between ai-center w-auto\" data-el=\"copy-container\">\n  <p class=\"copy-text flex-grow-1 text-truncate px-1\" data-el=\"copy-text\">copy me :-)</p>\n  <i class=\"copy-btn fa-light fa-clone flex-shrink-0 c-pointer\"></i>\n</div>\n<pre class=\"copy-container code-container\" data-el=\"code-container\">\n      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">bash</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-bash code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-built_in\">cat</span> file.txt\n      </code></pre></div>\n","topic_id":4}],"chapter_id":3},{"chapter_name":"1 . Introduction to PHP","topics":[{"topic_name":"PHP Tag","topic_html":"<div class=\"col-12 col-md-11 col-lg-9 my-2 mx-auto px-2 pb-5 border content-section rounded-2\" data-el=\"section\"><h3 class=\"p-2 mb-2\" data-el=\"heading\">PHP Tag<br></h3><p class=\"p p-2 px-3 mb-2\" data-el=\"text\">Php is unlike javascript a scripting language. It means we can write php code multiple times in a html code and outside of html code;<br></p><p class=\"p p-2 px-3 mb-2\" data-el=\"text\">There are <span style=\"color: #ff0080;\" class=\"underline\">three kinds of tags</span> to denote PHP blocks in a file. The PHP parser is looking for the opening and (if<br>present) closing tags to delimit the code to interpret.<br></p><ul class=\"ul ps-3 ms-2 ps-md-4 py-3 li-disk\" data-el=\"list-container\"> <li data-el=\"list\" class=\"\"><span style=\"\" class=\"bold\">Standard Tag</span><br>This tag id the standard method to embed PHP code in a file.<br><pre class=\"copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-meta\">&lt;?php</span>\n\n    <span class=\"hljs-comment\">// Your Code</span>\n\n<span class=\"hljs-meta\">?&gt;</span>\n      </code></pre></li> <li data-el=\"list\" class=\"\"><span style=\"\" class=\"bold\">Short Tag</span><br><pre class=\"copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-meta\">&lt;?</span>\n\n    <span class=\"hljs-comment\">//your code</span>\n\n<span class=\"hljs-meta\">?&gt;</span>\n\n      </code></pre>\n      <div class=\"w-100 my-3\" data-el=\"clps-container\">\n        <button class=\"btn w-100 text-end underline text-info\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#cc-3123\" aria-expanded=\"true\" aria-control=\"cc-3123\" data-el=\"collapse title\">\n            <span data-el=\"colps-title\" class=\"\">readmore</span>\n        </button>\n        <div class=\"m-1 collapse-content pb-2 collapse show\" id=\"cc-3123\" data-el=\"colps-content\" style=\"\">\n        <div class=\"col-12 rounded-2 border p-2\" data-el=\"colps-section\"><script>\n         (function(){\n            let randomNumber = Math.round(Math.random()*10000)\n            let collapseContainer = get('.currentCollpaseContainer')\n            attr(get(collapseContainer,'button'),'data-bs-target',`#cc-${randomNumber}`)\n            attr(get(collapseContainer,'button'),'aria-control',`cc-${randomNumber}`)\n            attr(get(collapseContainer,'.collapse-content'),'id',`cc-${randomNumber}`)\n            collapseContainer.classList.remove('currentCollpaseContainer')\n         })()\n       </script><h5 class=\"p-2 mb-2\" data-el=\"title\">Short tag :<br></h5><ul class=\"ul li-disk ps-4 ps-md-5 py-3\" data-el=\"list-container\"><li data-el=\"list\" class=\"\">might not be enabled by default , to enable it go to <span style=\"\" class=\"underline\">php.ini</span> file&nbsp; then configure it to <span style=\"\" class=\"hl hl-default\">short_open_tag = On</span> <br></li><li data-el=\"list\">disallowed in all major PHP coding standards\n</li><li data-el=\"list\">discouraged in the official documentation\n</li><li data-el=\"list\">disabled by default in most distributions\n</li><li data-el=\"list\">interfere with inline XML's processing instructions\n</li><li data-el=\"list\">are not accepted in code submissions by most open source projects\n</li></ul></div>\n        </div>\n</div>\n</li> <li data-el=\"list\" class=\"\"><span style=\"\" class=\"bold\">ASP Tag</span><br><pre class=\"copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\">&lt;%\n\n    <span class=\"hljs-comment\">//php code</span>\n\n%&gt;\n\n      </code></pre><p class=\"light-note p-3 rounded-1 mx-2 mb-2 text-light box-bg\">Note : ASP-style tags were deprecated in PHP 7.0 and <span style=\"color: #ff0080;\" class=\"\">removed</span>&nbsp; in PHP 7.2. As of PHP 7.2 and later, this syntax is no longer supported<br></p></li></ul></div>","topic_id":5},{"topic_name":"Hello World","topic_html":"<div class=\"col-12 col-md-11 col-lg-9 my-2 mx-auto px-2 pb-5 border content-section rounded-2\" data-el=\"section\"><h3 class=\"p-2 mb-2\" data-el=\"heading\">Hello World<br></h3><p class=\"p p-2 px-3 mb-2\" data-el=\"text\">The most widely used language construct to print output in PHP is echo<br><pre class=\"copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"Hello, World!\"</span>;\n\n<span class=\"hljs-meta\">?&gt;</span>\n      </code></pre></p><p></p><p></p><p class=\"p p-2 px-3 mb-2\" data-el=\"text\">Alternatively, you can also use print<pre class=\"copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"Hello, World!\"</span>;\n\n<span class=\"hljs-meta\">?&gt;</span>\n      </code></pre></p><p></p><p></p><h5 class=\"p-2 mb-2\" data-el=\"title\">echo vs print<br></h5><p class=\"p p-2 px-3 mb-2\" data-el=\"text\">Both statements perform the same function, with minor differences</p><ul class=\"ul li-disk ps-4 ps-md-5 py-3\" data-el=\"list-container\"><li data-el=\"list\" class=\"\">echo has a void return, whereas print returns an int with a value of 1\n<pre class=\"copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"hello world\"</span>; <span class=\"hljs-comment\">//return nothing</span>\n\n<span class=\"hljs-variable\">$x</span> = <span class=\"hljs-keyword\">print</span>(<span class=\"hljs-string\">'hello world'</span>);\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$x</span>; <span class=\"hljs-comment\">//1</span>\n\n<span class=\"hljs-meta\">?&gt;</span>\n      </code></pre></li><li data-el=\"list\" class=\"\">echo can take multiple arguments (without parentheses only), whereas print only takes one argument\n<pre class=\"copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"hello\"</span> . <span class=\"hljs-string\">\"world\"</span>; <span class=\"hljs-comment\">//helloworld</span>\n\n<span class=\"hljs-keyword\">print&nbsp;</span><span class=\"hljs-string\">\"hello\"</span> . <span class=\"hljs-string\">\"world\"</span>; <br><br><span class=\"hljs-comment\">// <span class=\"\">PHP Parse error</span>:  syntax error, unexpected token \",\" in php shell code on line 1</span>\n\n<span class=\"hljs-meta\">?&gt;</span>\n\n      </code></pre></li><li data-el=\"list\" class=\"\">echo is slightly faster than print\n<br><br><p class=\"light-note p-3 rounded-1 mx-2 mb-2 text-light box-bg\">Note : Both echo and print are language constructs, not functions. That means they do not require parentheses () around their arguments. For cosmetic consistency with functions, parentheses can be included.<br></p></li></ul><p></p><h5 class=\"p-2 mb-2\" data-el=\"title\">printf<br></h5><p class=\"p p-2 px-3 mb-2\" data-el=\"text\">The printf() function in php works similarly to printf() in C and other languages.<br><pre class=\"copy-container code-container\" data-el=\"code-container\">      <div class=\"code-header p-2 px-3 d-flex align-items-center flex-nowrap\">\n      <p class=\"mx-1 flex-grow-1 text-truncate\" data-el=\"code-title\">php</p>\n      <i class=\"fa-light fa-clone copy-btn  flex-shrink-0 rounded-circle\" title=\"copy code\"></i>\n      </div>\n      <code data-theme=\"default\" class=\"language-php code-main copy-text scroll scroll-both scroll-on-hover scroll-min hljs\" data-highlighted=\"yes\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-comment\">//printf(format,arg1,arg2,...)</span>\n\n<span class=\"hljs-title function_ invoke__\">printf</span>(<span class=\"hljs-string\">\"%s\"</span>, <span class=\"hljs-string\">\"Hello, World!\"</span>);\n\n<span class=\"hljs-meta\">?&gt;</span>\n      </code></pre></p><p></p></div>","topic_id":6}],"chapter_id":4},{"chapter_name":"2 . Setting Up PHP Enviroment","topics":[],"chapter_id":5},{"chapter_name":"3 . PHP Syntax","topics":[],"chapter_id":6},{"chapter_name":"4 . Variables and Constants in PHP","topics":[],"chapter_id":7},{"chapter_name":"5 . Data Types","topics":[],"chapter_id":8},{"chapter_name":"6 . Working with Strings","topics":[],"chapter_id":9},{"chapter_name":"7 . Working with Numbers","topics":[],"chapter_id":10},{"chapter_name":"8 . PHP Arrays","topics":[],"chapter_id":11},{"chapter_name":"9 . Associative Arrays in PHP","topics":[],"chapter_id":12},{"chapter_name":"10 . Control Structures : If-Else Statements","topics":[],"chapter_id":13},{"chapter_name":"11 . Switch Case in PHP","topics":[],"chapter_id":14},{"chapter_name":"12 . Loops in PHP : While and Do-While","topics":[],"chapter_id":15},{"chapter_name":"13 . For and ForEach Loops","topics":[],"chapter_id":16},{"chapter_name":"14 . Function in PHP","topics":[],"chapter_id":17},{"chapter_name":"15 . Scope and Lifetime of Variables","topics":[],"chapter_id":18},{"chapter_name":"16 . PHP Function Arguments","topics":[],"chapter_id":19},{"chapter_name":"17 . Returning Values from Functions","topics":[],"chapter_id":20},{"chapter_name":"18 . Recursive Functions in PHP","topics":[],"chapter_id":21},{"chapter_name":"19 . Working with Dates and Times","topics":[],"chapter_id":22},{"chapter_name":"20 . Working with Files : Read and Write Operations","topics":[],"chapter_id":23},{"chapter_name":"21 . File Uploading in PHP","topics":[],"chapter_id":24},{"chapter_name":"22 . PHP Sessions","topics":[],"chapter_id":25},{"chapter_name":"23 . Cookies in PHP","topics":[],"chapter_id":26},{"chapter_name":"24 . PHP Error Handling","topics":[],"chapter_id":27},{"chapter_name":"25 . PHP OOP","topics":[],"chapter_id":28},{"chapter_name":"26 . Classes and Objects in PHP","topics":[],"chapter_id":29},{"chapter_name":"27 . Constructors and Destructors","topics":[],"chapter_id":30}]}