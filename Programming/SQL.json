{"subject_name":"SQL","subject_id":58,"chapters":[{"chapter_name":"06.SELECT","topics":[{"topic_name":"00.Introduction","topic_html":"<sn><h3>SELECT</h3><p>The SELECT statement is at the heart of most SQL queries. It defines what result set should be returned by the query, and is almost always used in conjunction with the FROM clause, which defines what part(s) of the database should be queried</p><p>go to this <a target=\"_blank\" href=\"https://www.w3schools.com/sql/trysql.asp?filename=trysql_select_or\">page</a>and practise sql code</p></sn>","topic_id":773,"last_visited":"2025-03-24T11:08:20.021Z"},{"topic_name":"01.Select All Columns","topic_html":"<sn><md class=\"p-1 p-md-2 my-2\" data-rr=\"true\">\n## **Using the Wildcard Character to Select All Columns in a Query**\n\n#### Syntax\n\n```sql\nSELECT COLUMN.. FROM Table\n```\n\n### **Database Structure**\n\n**Employees table:**\n\n| Id | FName | LName  | DeptId |\n|----|------|-------|--------|\n| 1  | James | Smith | 3      |\n| 2  | John  | Johnson | 4    |\n\n**Departments table:**\n\n| Id | Name       |\n|----|------------|\n| 1  | Sales      |\n| 2  | Marketing  |\n| 3  | Finance    |\n| 4  | IT         |\n\n---\n\n### **Simple SELECT Statement**\n\n---\n\n\nThe `*` wildcard character is used to **select all available columns** in a table.\n\n- When used instead of explicit column names, it returns **all columns** from the tables specified in the `FROM` clause and any tables joined.\n  \n**Example Query:**\n```sql\nSELECT * FROM Employees;\n```\n**Result:**\n\n| Id | FName | LName  | DeptId |\n|----|------|-------|--------|\n| 1  | James | Smith | 3      |\n| 2  | John  | Johnson | 4    |\n\n---\n\n### **Dot Notation**\n\nTo select all values from a specific table while joining, use **dot notation**:\n\n**Example Query:**\n```sql\nSELECT\n  Employees.*,\n  Departments.Name\nFROM\n  Employees\nJOIN\n  Departments\nON Departments.Id = Employees.DeptId;\n```\n**Result:**\n\n| Id | FName | LName  | DeptId | Name    |\n|----|------|-------|--------|--------|\n| 1  | James | Smith | 3      | Finance |\n| 2  | John  | Johnson | 4    | IT      |\n\n---\n\n### **Warnings Against Use of `*`**\n\nIt is generally **advised to avoid using `*` in production code** due to potential issues:\n\n1. **Excess Resource Usage**:  \n   - Increases I/O, network load, memory usage by fetching unnecessary columns (e.g., large fields like notes/files).\n  \n2. **Internal Disk Spooling**:  \n   - May cause extra I/O if intermediate results are written to disk during complex query processing.\n\n3. **Unnecessary Processing**:  \n   - Includes unneeded columns such as:\n     - Computed columns.\n     - Columns from views/tables that could be optimized out.\n\n4. **Ambiguous Column Names**:  \n   - If columns are added later, duplicate column names can cause errors.  \n   - Example:\n     ```sql\n     SELECT * \n     FROM orders \n     JOIN people ON people.id = orders.personid \n     ORDER BY displayname;\n     ```\n     If `displayname` is added to both tables, ambiguity or unexpected behavior may occur.\n\n---\n\n### **When Is It Acceptable to Use `*`?**\n\n- **Manual Queries / Investigation / Prototyping**:  \n  Fine for quick checks and exploration.\n  \n- **Design Necessities**:  \n  If unavoidable, prefer `tablealias.*` over plain `*`.\n\n- **In `EXISTS` Clauses**:  \n  Example:\n  ```sql\n  SELECT A.col1, A.col2 \n  FROM A \n  WHERE EXISTS (SELECT * FROM B WHERE A.ID = B.A_ID);\n  ```\n  No data is returned from table B, so using `*` here is safe.\n\n- **In `COUNT(*)` Queries**:  \n  Safe, as it does not return columns but counts rows.\n</md></sn>","topic_id":774,"last_visited":"2025-03-24T11:12:07.535Z"}],"chapter_id":200}],"author":{"login":"Nh-emon","id":146737722,"node_id":"U_kgDOCL8KOg","avatar_url":"https://avatars.githubusercontent.com/u/146737722?v=4","gravatar_id":"","url":"https://api.github.com/users/Nh-emon","html_url":"https://github.com/Nh-emon","followers_url":"https://api.github.com/users/Nh-emon/followers","following_url":"https://api.github.com/users/Nh-emon/following{/other_user}","gists_url":"https://api.github.com/users/Nh-emon/gists{/gist_id}","starred_url":"https://api.github.com/users/Nh-emon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nh-emon/subscriptions","organizations_url":"https://api.github.com/users/Nh-emon/orgs","repos_url":"https://api.github.com/users/Nh-emon/repos","events_url":"https://api.github.com/users/Nh-emon/events{/privacy}","received_events_url":"https://api.github.com/users/Nh-emon/received_events","type":"User","site_admin":false,"name":"Emon","company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":20,"public_gists":0,"followers":1,"following":1,"created_at":"2023-10-02T13:07:54Z","updated_at":"2024-08-06T16:33:13Z"},"created_on":"2025-03-24T10:27:26.644Z","is_private":false,"folder":"Programming","web_url":"http://qdoc.free.nf","nameKeys":["chapter_name","topic_name"],"last_update_on":"2025-03-24T11:12:14.461Z"}