{"subject_name":"Javascript","subject_id":45,"chapters":[{"chapter_name":"05.Console","topics":[{"topic_name":"00.Introduction","topic_html":"<sn><h3>Console<br></h3><p>A browser's debugging console or web console is generally used by developers to <m>identify errors</m>, <m>understand flow</m><br><m>of execution</m>, <m>log data</m> and for many other purpose at runtime. This information is accessed through the console<br>object<img class=\"img-fluid\" alt=\"image\" src=\"https://developer.chrome.com/static/docs/devtools/console/image/the-console-panel-dc4828392d194.png\"></p><p>The information displayed by a <m>debugging/web console</m> is made available through the multiple methods of the<br>console Javascript object that can be consulted through<c> console.dir(console)</c>. Besides the <m>console.memory</m><br>property, the methods displayed are generally the following (taken from Chromium's output):</p><pre data-v=\"javascript\">Console {\n  log: ƒ log()\n  warn: ƒ warn()\n  error: ƒ error()\n  dir: ƒ dir()\n  table: ƒ table()\n  trace: ƒ trace()\n  group: ƒ group()\n  groupCollapsed: ƒ groupCollapsed()\n  groupEnd: ƒ groupEnd()\n  time: ƒ time()\n  timeLog: ƒ timeLog()\n  timeEnd: ƒ timeEnd()\n  clear: ƒ clear()\n  count: ƒ count()\n  countReset: ƒ countReset()\n  assert: ƒ assert()\n  debug: ƒ debug()\n  info: ƒ info()\n  dirxml: ƒ dirxml()\n  profile: ƒ profile()\n  profileEnd: ƒ profileEnd()\n  timeStamp: ƒ timeStamp()\n  context: ƒ context()\n  memory: MemoryInfo\n}\n</pre><p>The Console Object has mostly function except the <m>memory</m> which is a Object<br></p></sn><sn><h5>Opening Browser Console<br></h5><p>Browser console can be opened via right clicking on mouse and selecting inspect option from popup context menu<br></p><md data-rr=\"true\"><pre>Here's a table summarizing shortcuts to open the browser console for different browsers and operating systems:<br><br>| **Browser**      | **Windows/Linux**                     | **Mac**                          | **Notes**                                                                 |<br>|-------------------|---------------------------------------|-----------------------------------|---------------------------------------------------------------------------|<br>| **Google Chrome** | `Ctrl + Shift + J`                   | `Cmd + Option + J`               | Opens the **Console** directly.                                           |<br>| **Mozilla Firefox**| `Ctrl + Shift + K`                  | `Cmd + Option + K`               | Opens the **Web Console** directly.                                       |<br>| **Microsoft Edge**| `Ctrl + Shift + J`                   | `Cmd + Option + J`               | Similar to Chrome, as Edge is based on Chromium.                          |<br>| **Safari**        | *(N/A)* (Not on Windows/Linux)       | `Cmd + Option + C`               | Requires enabling **Developer Menu** in Safari Preferences &gt; Advanced.    |<br>| **Opera**         | `Ctrl + Shift + J`                   | `Cmd + Option + J`               | Same shortcut as Chrome and Edge.                                         |<br><br></pre></md></sn>","topic_id":562,"last_visited":"2024-12-08T02:27:28.499Z"},{"topic_name":"01.Console Time","topic_html":"<sn><h3 class=\"text-info text-center\">&nbsp;Measuring time - console.time()</h3><p>console.time() can be used to measure how long a task in your code takes to run</p><p>Calling <m>console.time([label])</m> starts a new timer. When <m>console.timeEnd([label])</m> is called, the elapsed time, in<br>milliseconds, since the <m>original .time()</m> call is calculated and logged. Because of this behavior, you can call<br>.timeEnd() multiple times with the same label to log the elapsed time since the <m>original .time()</m> call was made.</p></sn><sn><h5>Example1 :<br></h5><pre data-v=\"javascript\">const test = 'testingUserSpeed'\nconsole.time(test)//here test is the label\nalert('click to continue')\nconsole.timeEnd(test)\n//testingUserSpeed: 5615ms - timer ended</pre></sn><sn><h5>Example2 :<br></h5><pre data-v=\"javascript\">console.time('test-x')\nconsole.log('processing...')\nsetTimeout(()=&gt;{\n   console.log('processing end')\n},3000)\nconsole.timeEnd('test-x')\n//processing...\n//test-x: Xms (elapsed time since console.time was called)\n//processing end</pre><p>As setTimeout is asynchronous so it run after 3s and <m>console.time</m> and <m>console.timeEnd</m> is synchronous<br></p></sn><sn><h5>Example 3 :<br></h5><pre data-v=\"javascript\">console.time('test-x');\nconsole.log('processing...');\nsetTimeout(() =&gt; {\n   console.log('processing end');\n   console.timeEnd('test-x');\n}, 3000);\n//processing...\n//processing end\n//test-x: 3002ms - timer ended\n</pre><pre class=\"copy-container parentEl\"></pre></sn>","topic_id":563,"last_visited":"2024-12-08T03:09:36.371Z"}],"chapter_id":178}],"author":{"login":"Nh-emon","id":146737722,"node_id":"U_kgDOCL8KOg","avatar_url":"https://avatars.githubusercontent.com/u/146737722?v=4","gravatar_id":"","url":"https://api.github.com/users/Nh-emon","html_url":"https://github.com/Nh-emon","followers_url":"https://api.github.com/users/Nh-emon/followers","following_url":"https://api.github.com/users/Nh-emon/following{/other_user}","gists_url":"https://api.github.com/users/Nh-emon/gists{/gist_id}","starred_url":"https://api.github.com/users/Nh-emon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nh-emon/subscriptions","organizations_url":"https://api.github.com/users/Nh-emon/orgs","repos_url":"https://api.github.com/users/Nh-emon/repos","events_url":"https://api.github.com/users/Nh-emon/events{/privacy}","received_events_url":"https://api.github.com/users/Nh-emon/received_events","type":"User","site_admin":false,"name":"Emon","company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":20,"public_gists":0,"followers":1,"following":1,"created_at":"2023-10-02T13:07:54Z","updated_at":"2024-08-06T16:33:13Z"},"created_on":"2024-12-07T01:25:54.291Z","is_private":false,"folder":"Programming","web_url":"https://qdock.free.nf","last_update_on":"2024-12-08T04:36:47.609Z"}