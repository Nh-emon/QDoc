{"subject_name":"Js Lib","subject_id":50,"chapters":[{"chapter_name":"New","topics":[{"topic_name":"1.new Topic","topic_html":"<sn class=\"px-lg-3\"><md class=\"p-1 p-md-2 my-2\" data-rr=\"true\">The MySQL CLI (Command Line Interface) allows you to interact with MySQL databases directly from the terminal. Here are the basics:\n\n### üîπ **Connecting to MySQL**\n```sh\nmysql -u root -p\n```\n(You'll be prompted to enter your password.)\n\nOr specify the database directly:\n```sh\nmysql -u root -p my_database\n```\n\n### üîπ **Show Databases**\n```sql\nSHOW DATABASES;\n```\n\n### üîπ **Select a Database**\n```sql\nUSE my_database;\n```\n\n### üîπ **Show Tables**\n```sql\nSHOW TABLES;\n```\n\n### üîπ **Describe Table Structure**\n```sql\nDESC table_name;\n```\n\n### üîπ **Create a Database**\n```sql\nCREATE DATABASE my_database;\n```\n\n### üîπ **Create a Table**\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100) UNIQUE\n);\n```\n\n### üîπ **Insert Data**\n```sql\nINSERT INTO users (name, email) VALUES ('Alice', 'alice@example.com');\n```\n\n### üîπ **Select Data**\n```sql\nSELECT * FROM users;\n```\n\n### üîπ **Update Data**\n```sql\nUPDATE users SET name = 'Bob' WHERE id = 1;\n```\n\n### üîπ **Delete Data**\n```sql\nDELETE FROM users WHERE id = 1;\n```\n\n### üîπ **Drop Table**\n```sql\nDROP TABLE users;\n```\n\n### üîπ **Exit MySQL**\n```sh\nexit;\n```\n\nNeed anything specific? üöÄ</md></sn>","topic_id":665,"last_visited":"2025-02-04T13:44:23.155Z"},{"topic_name":"filter","topic_html":"<sn class=\"px-lg-3\"><md class=\"p-1 p-md-2 my-2\" data-rr=\"true\">### üîπ **SQL Filters (WHERE Clause)**\nIn SQL, the **`WHERE`** clause is used to filter records based on specific conditions. It allows you to retrieve only the data that meets certain criteria.\n\n---\n\n### ‚úÖ **Basic Syntax**\n```sql\nSELECT column_name FROM table_name WHERE condition;\n```\n\n---\n\n### üîπ **Examples of SQL Filters**\n\n#### 1Ô∏è‚É£ **Filter by a Specific Value**\nGet users with the name \"Alice\":\n```sql\nSELECT * FROM users WHERE name = 'Alice';\n```\n\n#### 2Ô∏è‚É£ **Filter Using Comparison Operators**\n| Operator | Meaning               |\n|----------|-----------------------|\n| `=`      | Equal to              |\n| `!=` or `&lt;&gt;` | Not equal to   |\n| `&gt;`      | Greater than          |\n| `&lt;`      | Less than             |\n| `&gt;=`     | Greater than or equal |\n| `&lt;=`     | Less than or equal    |\n\nExample: Get users older than 25:\n```sql\nSELECT * FROM users WHERE age &gt; 25;\n```\n\n#### 3Ô∏è‚É£ **Filter Using Logical Operators**\n| Operator | Meaning             |\n|----------|---------------------|\n| `AND`    | Both conditions must be true |\n| `OR`     | At least one condition must be true |\n| `NOT`    | Negates a condition |\n\nExample: Get users older than 25 **AND** from \"USA\":\n```sql\nSELECT * FROM users WHERE age &gt; 25 AND country = 'USA';\n```\n\nExample: Get users who are either younger than 18 **OR** older than 60:\n```sql\nSELECT * FROM users WHERE age &lt; 18 OR age &gt; 60;\n```\n\n#### 4Ô∏è‚É£ **Filter Using `IN` (Multiple Values)**\nGet users from either \"USA\", \"Canada\", or \"UK\":\n```sql\nSELECT * FROM users WHERE country IN ('USA', 'Canada', 'UK');\n```\n\n#### 5Ô∏è‚É£ **Filter Using `BETWEEN` (Range)**\nGet users aged between 20 and 30:\n```sql\nSELECT * FROM users WHERE age BETWEEN 20 AND 30;\n```\n\n#### 6Ô∏è‚É£ **Filter Using `LIKE` (Pattern Matching)**\n| Operator | Meaning                  |\n|----------|--------------------------|\n| `%`      | Any sequence of characters |\n| `_`      | A single character         |\n\nExample: Get users whose name **starts with \"A\"**:\n```sql\nSELECT * FROM users WHERE name LIKE 'A%';\n```\n\nExample: Get users whose name **ends with \"e\"**:\n```sql\nSELECT * FROM users WHERE name LIKE '%e';\n```\n\n#### 7Ô∏è‚É£ **Filter Using `IS NULL` (Checking NULL Values)**\nGet users who **haven‚Äôt provided** their email:\n```sql\nSELECT * FROM users WHERE email IS NULL;\n```\n\nGet users **who have an email**:\n```sql\nSELECT * FROM users WHERE email IS NOT NULL;\n```\n\n---\n\n### üéØ **Combining Filters**\nFind users aged **between 20 and 30**, from the **USA**, and **have an email**:\n```sql\nSELECT * FROM users \nWHERE age BETWEEN 20 AND 30 \nAND country = 'USA' \nAND email IS NOT NULL;\n```</md></sn>","topic_id":666,"last_visited":"2025-02-13T04:28:58.063Z"},{"topic_name":"PHP","topic_html":"<sn><md class=\"p-1 p-md-2 my-2\" data-rr=\"true\">### Markdown Language: Beginner to Advanced Tutorial  \nMarkdown is a lightweight markup language that you can use to format plain text. It‚Äôs widely used in documentation, web content, and README files.  \n\n---\n\n### **1. Basics of Markdown**\nMarkdown uses simple symbols and text formatting conventions.  \n\n#### **1.1. Headings**\nUse `#` for headings. Add more `#` for smaller headings.  \n```markdown\n# Heading 1\n## Heading 2\n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n```\n\n#### **1.2. Emphasis**  \n- *Italic*: Use `*text*` or `_text_`  \n- **Bold**: Use `**text**` or `__text__`  \n- ***Bold + Italic***: Use `***text***` or `___text___`  \n```markdown\n*Italic*  \n**Bold**  \n***Bold + Italic***\n```\n\n#### **1.3. Lists**  \n- **Unordered Lists**: Use `-`, `*`, or `+`.  \n```markdown\n- Item 1\n- Item 2\n  - Sub-item 2.1\n  - Sub-item 2.2\n```\n\n- **Ordered Lists**: Use numbers followed by a period (`1.`, `2.`).  \n```markdown\n1. First\n2. Second\n   1. Nested\n   2. Nested\n```\n\n#### **1.4. Links and Images**  \n- **Links**: `[Link Text](URL)`  \n- **Images**: `![Alt Text](Image URL)`  \n```markdown\n[Google](https://www.google.com)  \n![Markdown Logo](https://markdown-here.com/img/icon256.png)\n```\n\n---\n\n### **2. Intermediate Markdown**  \n\n#### **2.1. Blockquotes**  \nUse `&gt;` for blockquotes.  \n```markdown\n&gt; This is a blockquote.  \n&gt;&gt; Nested blockquote.  \n```\n\n#### **2.2. Code Blocks**  \n- **Inline Code**: Use backticks (\\`) around the text.  \n```markdown\n`Inline code example`\n```\n\n- **Multiline Code Blocks**: Use triple backticks (```) or indent with four spaces.  \n```markdown\n```\nCode block example\n```\n```\n\n#### **2.3. Horizontal Rules**  \nUse three or more dashes (`---`), asterisks (`***`), or underscores (`___`).  \n```markdown\n---\n```\n\n#### **2.4. Tables**  \nUse `|` and `-` to create tables.  \n```markdown\n| Column 1 | Column 2 | Column 3 |\n|----------|----------|----------|\n| Row 1    | Data 1   | Data 2   |\n| Row 2    | Data 3   | Data 4   |\n```\n\n#### **2.5. Task Lists**  \nUse `- [ ]` for unchecked and `- [x]` for checked tasks.  \n```markdown\n- [x] Task 1\n- [ ] Task 2\n```\n\n---\n\n### **3. Advanced Markdown**  \n\n#### **3.1. Escaping Characters**  \nUse a backslash (`\\`) before special Markdown characters to escape them.  \n```markdown\n\\*This is not italicized\\*\n```\n\n#### **3.2. Footnotes**  \nAdd a reference like `[^1]` and the footnote text elsewhere.  \n```markdown\nHere is a footnote reference[^1].\n\n[^1]: This is the footnote text.\n```\n\n#### **3.3. Strikethrough**  \nUse `~~text~~` for strikethrough.  \n```markdown\n~~This text is strikethrough~~\n```\n\n#### **3.4. Definition Lists**  \nUse a colon (`:`) followed by a definition.  \n```markdown\nTerm 1\n: Definition 1\n\nTerm 2\n: Definition 2\n```\n\n#### **3.5. HTML in Markdown**  \nYou can embed raw HTML when needed.  \n```markdown\n&lt;div style=\"color: red;\"&gt;This is a red text.&lt;/div&gt;\n```\n\n#### **3.6. Automatic Linking**  \nUse angle brackets for automatic URLs.  \n```markdown\n&lt;https://www.google.com&gt;\n```\n\n---\n\n### **4. Markdown Cheatsheet**\n\n| Syntax                  | Description                                    |\n|-------------------------|------------------------------------------------|\n| `# Heading`             | Creates a heading. Add more `#` for smaller ones. |\n| `*Italic*`              | Italics (also `_text_`).                      |\n| `**Bold**`              | Bold (also `__text__`).                       |\n| `***Bold + Italic***`   | Combination of bold and italic.               |\n| `- Item`                | Creates an unordered list.                    |\n| `1. Item`               | Creates an ordered list.                      |\n| `[Text](URL)`           | Hyperlink.                                    |\n| `![Alt](URL)`           | Image.                                        |\n| `&gt; Quote`               | Blockquote.                                   |\n| `` `Code` ``            | Inline code.                                  |\n| `---`                   | Horizontal line.                              |\n| `| Table | Example |`   | Table.                                        |\n| `- [ ]` / `- [x]`       | Task lists (unchecked/checked).               |\n| `~~Strikethrough~~`     | Strikethrough text.                           |\n| `[Text][Reference]`     | Footnotes and links.                          |\n| `&lt;URL&gt;`                 | Automatic linking.                            |\n</md></sn>","topic_id":733,"last_visited":"2025-02-13T04:29:15.586Z"}],"chapter_id":189}],"author":{"login":"Nh-emon","id":146737722,"node_id":"U_kgDOCL8KOg","avatar_url":"https://avatars.githubusercontent.com/u/146737722?v=4","gravatar_id":"","url":"https://api.github.com/users/Nh-emon","html_url":"https://github.com/Nh-emon","followers_url":"https://api.github.com/users/Nh-emon/followers","following_url":"https://api.github.com/users/Nh-emon/following{/other_user}","gists_url":"https://api.github.com/users/Nh-emon/gists{/gist_id}","starred_url":"https://api.github.com/users/Nh-emon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nh-emon/subscriptions","organizations_url":"https://api.github.com/users/Nh-emon/orgs","repos_url":"https://api.github.com/users/Nh-emon/repos","events_url":"https://api.github.com/users/Nh-emon/events{/privacy}","received_events_url":"https://api.github.com/users/Nh-emon/received_events","type":"User","site_admin":false,"name":"Emon","company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":20,"public_gists":0,"followers":1,"following":1,"created_at":"2023-10-02T13:07:54Z","updated_at":"2024-08-06T16:33:13Z"},"created_on":"2025-02-02T14:33:56.844Z","is_private":false,"folder":"Programming","web_url":"https://qdock.free.nf","last_update_on":"2025-02-13T04:34:35.638Z"}