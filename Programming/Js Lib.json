{"subject_name":"Js Lib","subject_id":50,"chapters":[{"chapter_name":"markdownit","topics":[{"topic_name":"01.Overview","topic_html":"<sn><md>### **Markdownit**\n---\n`markdown-it` is a **JavaScript library** that parses and converts **Markdown** syntax into **HTML**. It's fast, pluggable, and commonly used in web apps that allow users to write formatted content using Markdown.\n\n### 🔧 Features:\n- **CommonMark** compliant (standard Markdown syntax)\n- Supports **GitHub Flavored Markdown (GFM)**\n- **Extensible** via plugins\n- Supports **syntax highlighting**\n- Written in **JavaScript**, works in both **Node.js** and **browsers**\n\n### 📦 Installation:\n```bash\nnpm install markdown-it\n```\n\n### 🚀 Usage Example:\n```javascript\nconst MarkdownIt = require('markdown-it');\nconst md = new MarkdownIt();\n\nconst result = md.render('# Hello **world**');\nconsole.log(result);\n// Outputs: &lt;h1&gt;Hello &lt;strong&gt;world&lt;/strong&gt;&lt;/h1&gt;\n```</md></sn>","topic_id":934,"last_visited":"2025-04-25T03:54:51.857Z"},{"topic_name":"02.Set Up","topic_html":"<sn><md>### **Set Up**\n---\n\n### 🌐 In the **Browser**:\n\n#### ✅ Option 1: Using CDN\n```html\n&lt;script src=\"https://cdn.jsdelivr.net/npm/markdown-it/dist/markdown-it.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  const md = window.markdownit();\n  const result = md.render('# Hello **Markdown-it**!');\n  document.body.innerHTML = result;\n&lt;/script&gt;\n```\n\n---\n\n### 🖥️ In **Node.js**:\n\n#### ✅ Step 1: Install via npm\n```bash\nnpm install markdown-it\n```\n\n#### ✅ Step 2: Use in your JS file\n```javascript\nconst MarkdownIt = require('markdown-it');\nconst md = new MarkdownIt();\n\nconst markdownText = '# Hello **Markdown-it**!';\nconst html = md.render(markdownText);\n\nconsole.log(html);\n// Output: &lt;h1&gt;Hello &lt;strong&gt;Markdown-it&lt;/strong&gt;&lt;/h1&gt;\n```</md></sn>","topic_id":935,"last_visited":"2025-04-25T03:56:13.641Z"},{"topic_name":"03.How it work","topic_html":"<sn><md>###  **⚙️ How `markdown-it` Works:**\n---\n1. **Input**: You provide Markdown text like:\n   ```\n   # Hello World\n   This is **bold** text.\n   ```\n\n2. **Tokenization**: The library breaks it into tokens:\n   ```js\n   [\n     { type: 'heading_open', tag: 'h1', ... },\n     { type: 'inline', content: 'Hello World', ... },\n     { type: 'heading_close', tag: 'h1', ... },\n     ...\n   ]\n   ```\n\n3. **Rendering**: It uses those tokens to generate HTML:\n   ```html\n   &lt;h1&gt;Hello World&lt;/h1&gt;\n   &lt;p&gt;This is &lt;strong&gt;bold&lt;/strong&gt; text.&lt;/p&gt;\n   ```\n\n---\n\n### 🧠 Internals (Simplified):\n- **Lexer**: Parses raw Markdown into a stream of inline/block tokens.\n- **Renderer**: Converts tokens into HTML.\n- **Plugins**: You can add custom rules or modify existing ones.\n\n---\n\n### 🔁 Flow:\n```plaintext\nMarkdown String\n      ↓\n[Parse]\n      ↓\nTokens\n      ↓\n[Render]\n      ↓\nHTML Output\n```</md></sn>","topic_id":936,"last_visited":"2025-04-25T04:08:08.836Z"},{"topic_name":"04.Dir","topic_html":"<sn><md>###   **markdown-it Library Directory Tree**\n---\n```bash\nmarkdown-it/\n├── bin/\n│   └── markdown-it.js\n├── lib/\n│   ├── index.js\n│   ├── parser_block.js\n│   ├── parser_core.js\n│   ├── parser_inline.js\n│   ├── renderer.js\n│   └── ...\n├── presets/\n│   ├── commonmark.js\n│   ├── default.js\n│   └── zero.js\n├── test/\n│   ├── fixtures/\n│   └── test.js\n├── docs/\n│   └── ...\n├── package.json\n├── README.md\n└── CHANGELOG.md\n```\n\n---\n\n### 📊 Explanation Table\n\n#### 📁 Root Level\n\n| File/Folder     | Description |\n|----------------|-------------|\n| `package.json` | Defines metadata and dependencies of the library |\n| `README.md`    | Documentation and usage instructions |\n| `CHANGELOG.md` | History of changes and versions |\n\n---\n\n#### 📁 `lib/` — 🔧 Core Parsing Logic\n\n| File               | Description |\n|--------------------|-------------|\n| `index.js`         | Main entry point — sets up the parser and renderer |\n| `parser_block.js`  | Parses block-level Markdown (e.g., headings, lists) |\n| `parser_inline.js` | Parses inline elements (e.g., bold, links) |\n| `parser_core.js`   | Manages parser rules and pipeline |\n| `renderer.js`      | Converts tokens into HTML output |\n\n---\n\n#### 📁 `bin/` — 🛠️ CLI Tool\n\n| File              | Description |\n|-------------------|-------------|\n| `markdown-it.js`  | Command-line interface for converting Markdown to HTML |\n\n---\n\n#### 📁 `presets/` — ⚙️ Parsing Modes\n\n| File             | Description |\n|------------------|-------------|\n| `default.js`     | Standard Markdown config |\n| `commonmark.js`  | CommonMark spec-compliant config |\n| `zero.js`        | Minimal config with all rules disabled |\n\n---\n\n#### 📁 `test/` — 🧪 Unit Tests\n\n| File/Folder       | Description |\n|-------------------|-------------|\n| `fixtures/`       | Sample test cases |\n| `test.js`         | Test runner and test definitions |\n\n---\n\n#### 📁 `docs/` — 📘 Documentation (if present)\n\n| Folder/File | Description |\n|-------------|-------------|\n| `...`       | Extra documentation or guide content |\n\n</md></sn>","topic_id":937,"last_visited":"2025-04-25T04:07:52.723Z"}],"chapter_id":244}],"author":{"login":"Nh-emon","id":146737722,"node_id":"U_kgDOCL8KOg","avatar_url":"https://avatars.githubusercontent.com/u/146737722?v=4","gravatar_id":"","url":"https://api.github.com/users/Nh-emon","html_url":"https://github.com/Nh-emon","followers_url":"https://api.github.com/users/Nh-emon/followers","following_url":"https://api.github.com/users/Nh-emon/following{/other_user}","gists_url":"https://api.github.com/users/Nh-emon/gists{/gist_id}","starred_url":"https://api.github.com/users/Nh-emon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nh-emon/subscriptions","organizations_url":"https://api.github.com/users/Nh-emon/orgs","repos_url":"https://api.github.com/users/Nh-emon/repos","events_url":"https://api.github.com/users/Nh-emon/events{/privacy}","received_events_url":"https://api.github.com/users/Nh-emon/received_events","type":"User","site_admin":false,"name":"Emon","company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":20,"public_gists":0,"followers":1,"following":1,"created_at":"2023-10-02T13:07:54Z","updated_at":"2024-08-06T16:33:13Z"},"created_on":"2025-02-02T14:33:56.844Z","is_private":false,"folder":"Programming","web_url":"https://qdock.free.nf","last_update_on":"2025-04-25T04:08:11.024Z"}