{"subject_name":"Math","subject_id":35,"chapters":[{"chapter_name":"2.Differential Calculas","topics":[{"topic_name":"1.Relations and Function","topic_html":"<sn class=\"current-slide\"><h3>Relations and Function</h3><md data-rr=\"true\" data-formula=\"true\"><pre>##### Relations<br><br>* A **relation** is a set of ordered pairs where each element from one set is paired with an element from another set* . Relations can be represented as sets of pairs, tables, or graphs. For example, in the relation \\((x, y)\\), \\(x\\) is called the **domain** (input), and \\(y\\) is called the **range** (output).<br><br>**Example:**<br>- Let \\(A = \\{1, 2, 3\\}\\) and \\(B = \\{4, 5, 6\\}\\).<br>- A relation from \\(A\\) to \\(B\\) could be \\(\\{(1, 4), (2, 5), (3, 6)\\}\\).<br><br>##### Functions<br><br>A **function** is a special type of relation where each element in the domain (input) is related to exactly one element in the range (output). This means that no two pairs can have the same first element with different second elements.<br><br>**Example:**<br>- Let \\(f: A \\to B\\), where \\(f(x) = x^2\\).<br>- If \\(A = \\{1, 2, 3\\}\\), then \\(f(A) = \\{(1, 1), (2, 4), (3, 9)\\}\\).<br><br>##### Key Differences<br>- **Relation**: Can have multiple outputs for a single input.<br>- **Function**: Each input has exactly one output.<br><br>##### Function Representation:<br>1. **Mapping notation**: \\( f: A \\to B \\)<br>2. **Rule notation**: \\( f(x) = x^2 \\)<br>3. **Graphical representation**: A curve or line showing the input-output relationship.</pre></md></sn><sn><h5>Relation vs Function</h5><md data-rr=\"true\" data-formula=\"true\"><pre>Hereâ€™s a comparison table of **relation** vs **function** with examples:<br><br>| **Aspect**           | **Relation**                                       | **Function**                                      |<br>|----------------------|---------------------------------------------------|--------------------------------------------------|<br>| **Definition**        | A set of ordered pairs where each input may map to one or more outputs. | A special relation where each input maps to exactly one output. |<br>| **Input-Output Rule** | An input can have multiple outputs.               | Each input has exactly one output.               |<br>| **Graphical Representation** | Can show multiple points for a single input on a graph. | No vertical line intersects the graph more than once. |<br>| **Example Set**       | \\( \\{(1, 2), (1, 3), (2, 4)\\} \\)                  | \\( \\{(1, 2), (2, 3), (3, 4)\\} \\)                |<br>| **Example Explanation** | In this relation, input 1 is related to both 2 and 3, which is allowed in a relation. | In this function, each input has a unique output, as required for functions. |<br>| **Representation**    | \\((x, y)\\), where multiple values of \\(y\\) are allowed for one \\(x\\). | \\((x, y)\\), where each \\(x\\) has only one \\(y\\). |<br><br>### Examples<br><br>#### Relation Example<br>- **Set**: \\(\\{(1, 2), (1, 3), (2, 4)\\}\\)<br>- **Explanation**: Input 1 is paired with both 2 and 3. Since multiple outputs are allowed for a relation, this is valid.<br><br>#### Function Example<br>- **Set**: \\(\\{(1, 2), (2, 3), (3, 4)\\}\\)<br>- **Explanation**: Each input has only one output (e.g., 1 maps to 2, 2 maps to 3), so this is a valid function.</pre></md></sn><sn><h4 class=\"text-center text-info\">Conditions of a function</h4><md data-rr=\"true\" data-formula=\"true\"><pre>For a relation to be considered a **function**, it must meet certain conditions. These conditions ensure that every input has only one output.<br><br>---<br>1. **Unique Output for Each Input**: <br>   - For every value in the domain (input), there must be exactly one corresponding value in the range (output). In other words, no input can have more than one output.<br><br>2. **Defined for All Domain Values**: <br>   - The function must be defined for every value in its domain. This means that there should not be any gaps, such as undefined operations (e.g., division by zero).<br>   <br>3. **Input-Output Pairing**: <br>   - Each element in the domain must have a corresponding output in the range.<br><br>##### Example 1: Valid Function<br>Let \\( f(x) = x^2 \\).<br><br>- **Domain**: All real numbers \\( (-\\infty, \\infty) \\).<br>- **Range**: All non-negative real numbers \\( [0, \\infty) \\).<br><br>In this case, each input (e.g., \\( f(2) = 4 \\) and \\( f(-2) = 4 \\)) has only one output, so this is a valid function.<br><br>##### Example 2: Invalid Function<br>Let \\( R = \\{(1, 2), (1, 3), (2, 4)\\} \\).<br><br>In this relation, the input \\(1\\) has two different outputs: 2 and 3. This violates the condition of a function that each input can have only one output. Therefore, this is **not** a valid function.<br><br>##### Key Takeaway<br>A relation is a function if, and only if, **each input has exactly one output**.</pre></md><md data-rr=\"true\" data-formula=\"true\"><pre>In a function, *several outputs can share the same input*, as long as *each input has only one corresponding output*.<br><br>##### Key Point<br>- A **function** can have multiple inputs produce the same output.<br>- However, **one input cannot produce multiple outputs**.<br><br>---<br><br>##### Example: Multiple Inputs, Same Output<br><br>Let \\( f(x) = x^2 \\).<br><br>- \\( f(2) = 4 \\)<br>- \\( f(-2) = 4 \\)<br><br>In this case, both 2 and -2 give the same output (4), but each input (2 and -2) has only one output. This is perfectly valid for a function.<br><br>---<br><br>##### Example: Invalid Case<br><br>Let \\( R = \\{(1, 2), (1, 3)\\} \\).<br><br>Here, the input \\(1\\) is paired with two different outputs (2 and 3), which is **not allowed** in a function.</pre></md></sn>","topic_id":237,"last_visited":"2024-10-15T01:47:42.547Z"},{"topic_name":"2.Domain and Range of Function","topic_html":"<sn><md data-rr=\"true\" data-formula=\"true\"><pre>### Domain of a Function<br>The **domain** of a function is the set of all possible input values (usually denoted as \\(x\\)) for which the function is defined. In other words, the domain consists of all the values that you can substitute into the function without causing any undefined behavior (like division by zero, or taking the square root of a negative number in real numbers).<br><br>**Example**:  <br>For the function \\( f(x) = \\frac{1}{x} \\), the domain is all real numbers except 0, because division by zero is undefined.  <br>- **Domain**: \\( (-\\infty, 0) \\cup (0, \\infty) \\)<br><br>### Range of a Function<br>The **range** of a function is the set of all possible output values (usually denoted as \\(y\\)) that the function can produce from the domain values. It is the collection of all values that \\(f(x)\\) can take when \\(x\\) is in the domain.<br><br>**Example**:  <br>For the same function \\( f(x) = \\frac{1}{x} \\), the output can never be 0 because \\( \\frac{1}{x} \\) never equals 0 for any \\(x\\). The range includes all real numbers except 0.  <br>- **Range**: \\( (-\\infty, 0) \\cup (0, \\infty) \\)<br><br>### Summary<br>- **Domain**: All the possible inputs (\\(x\\)-values) for the function.<br>- **Range**: All the possible outputs (\\(y\\)-values) that the function can produce.</pre></md></sn>","topic_id":239,"last_visited":"2024-10-15T02:18:03.072Z"}],"chapter_id":107}],"author":{"login":"Nh-emon","id":146737722,"node_id":"U_kgDOCL8KOg","avatar_url":"https://avatars.githubusercontent.com/u/146737722?v=4","gravatar_id":"","url":"https://api.github.com/users/Nh-emon","html_url":"https://github.com/Nh-emon","followers_url":"https://api.github.com/users/Nh-emon/followers","following_url":"https://api.github.com/users/Nh-emon/following{/other_user}","gists_url":"https://api.github.com/users/Nh-emon/gists{/gist_id}","starred_url":"https://api.github.com/users/Nh-emon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nh-emon/subscriptions","organizations_url":"https://api.github.com/users/Nh-emon/orgs","repos_url":"https://api.github.com/users/Nh-emon/repos","events_url":"https://api.github.com/users/Nh-emon/events{/privacy}","received_events_url":"https://api.github.com/users/Nh-emon/received_events","type":"User","site_admin":false,"name":"Emon","company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":20,"public_gists":0,"followers":1,"following":1,"created_at":"2023-10-02T13:07:54Z","updated_at":"2024-08-06T16:33:13Z"},"created_on":"2024-10-15T01:45:45.128Z","is_private":false,"folder":"1st Year Final","web_url":"https://qdock.free.nf","last_update_on":"2024-10-15T02:30:08.873Z"}